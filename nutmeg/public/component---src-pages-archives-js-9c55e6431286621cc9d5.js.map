{"version":3,"sources":["webpack:///./src/components/styles/blog.module.css","webpack:///./src/components/card.js","webpack:///./src/pages/archives.js","webpack:///./src/components/article-preview.js","webpack:///./src/components/date-components/year-preview.js"],"names":["module","exports","Card","title","name","month","category","display","imagePath","require","console","log","to","style","textDecoration","class","src","alt","alignContent","href","Archives","render","siteTitle","get","this","years","location","props","background","Helmet","className","map","year","key","date","React","Component","ArticlePreview","article","slug","description","styles","preview","previewTitle"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,KAAO,6B,kCCDzB,qCA0CeC,IAvCH,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE7BC,EAAUJ,EAEVE,GACFE,EAAUH,EACVE,EAAW,QAGXA,EAAW,UAGb,IAAIE,EAAYC,UAAQ,KAAaH,EAAd,QAGvB,OADAI,QAAQC,IAAIH,GAEV,kBAAC,IAAD,CAAMI,GAAE,GAAKT,EAASU,MAAO,CACzBC,eAAgB,SAEhB,yBAAKC,MAAM,QACP,yBACIC,IAAMR,EACNO,MAAM,eACNE,IAAI,QAER,yBAAKF,MAAM,aACP,wBAAIA,MAAM,aAAaF,MAAO,CAC1BK,aAAc,WACdX,GACJ,uBAAGQ,MAAM,cAGT,uBAAGI,KAAK,KAAKJ,MAAM,mBAAnB,e,uLCxBVK,E,kGACJC,OAAA,WACE,IAAMC,EAAYC,IAAIC,KAAM,sCAEtBC,GADQF,IAAIC,KAAM,0CACVD,IAAIC,KAAM,8CAExB,OAEE,kBAAC,IAAD,CAAQE,SAAUF,KAAKG,MAAMD,SAAUvB,MAAOmB,GAE5C,yBAAKT,MAAO,CAAEe,WAAY,SACxB,kBAACC,EAAA,EAAD,CAAQ1B,MAAOmB,IACf,yBAAKQ,UAAU,WACb,wBAAIA,UAAU,oBAAd,kBACA,wBAAIA,UAAU,aACXL,EAAMM,KAAI,SAACC,GACV,OACE,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CAAaE,KAAOF,WAiBhC,8CAAmB,uBAAGb,KAAK,6CAA6ChB,MAAM,aAA3D,aAAnB,SAA6G,uBAAGgB,KAAK,4BAA4BhB,MAAM,YAA1C,uB,GAnC9FgC,IAAMC,WAyCdhB,a,kCCpDf,yDAiCeiB,IA1BO,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAASN,EAA4B,EAA5BA,KAAM3B,EAAsB,EAAtBA,MAAsB,EAAfC,SAC7CI,QAAQC,IAAI2B,GACZ,IAAI9B,EAAYC,UAAQ,KAAa6B,EAAQhC,SAAtB,QAEvB,OACE,kBAAC,IAAD,CAAMM,GAAE,aAAeoB,EAAf,IAAuB3B,EAAvB,IAAgCiC,EAAQC,MAC5C,yBAAKxB,MAAM,QACP,yBACIC,IAAMR,EACNO,MAAM,eACNE,IAAI,QAER,yBAAKF,MAAM,aACP,wBAAIA,MAAM,aAAaF,MAAO,CAC1BK,aAAc,WACdoB,EAAQnC,OACZ,uBAAGY,MAAM,aACRuB,EAAQE,YAAYA,aAErB,uBAAGrB,KAAK,KAAKJ,MAAM,mBAAnB,e,kCC1BhB,gFAMe,oBAAGmB,EAAH,EAAGA,KAAM9B,EAAT,EAASA,KAAMC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAAtB,OACb,yBAAKwB,UAAWW,IAAOC,SACrB,wBAAIZ,UAAWW,IAAOE,cACpB,kBAAC,IAAD,CAAMxC,MAAO+B,EAAM9B,KAAMA,EAAMC,MAAQA,EAAQC,SAAUA","file":"component---src-pages-archives-js-9c55e6431286621cc9d5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"blog-module--hero--1B1EH\"};","import React from 'react';\nimport { Link } from 'gatsby'\n\nconst Card= ({ title, name, month, category }) => {\n  \n  let display = title\n  \n  if (month) {\n    display = name\n    category = \"Math\"\n  }\n  else {\n    category = \"Science\"\n  }\n\n  let imagePath = require(`../images/${category}.svg`)\n  //let imagePath = require(\"../images/health.svg\")\n  console.log(imagePath)\n  return (\n    <Link to={`${title}`} style={{\n        textDecoration: \"none\",\n    }}>\n        <div class=\"card\">\n            <img\n                src= {imagePath}\n                class=\"card-img-top\"\n                alt=\"...\"\n            />\n            <div class=\"card-body\">\n                <h4 class=\"card-title\" style={{\n                    alignContent: \"center\",\n                }}>{display}</h4>\n                <p class=\"card-text\">\n                \n                </p>\n                <a href=\"#!\" class=\"btn btn-primary\">Button</a>\n            </div>\n        </div>\n    </Link>\n    )\n}\n\nexport default Card;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport { Helmet } from 'react-helmet'\nimport styles from '../components/styles/blog.module.css'\nimport Layout from '../components/layout'\nimport ArticlePreview from '../components/article-preview'\nimport YearPreview from '../components/date-components/year-preview'\nimport Years from '../components/date-components/years'\n\n\nclass Archives extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const posts = get(this, 'props.data.allContentfulBlogPost.edges')\n    const years = get(this, 'props.data.allContentfulBlogPost.distinct') // array of years \"YYYY\"\n\n    return (\n      \n      <Layout location={this.props.location} title={siteTitle}>\n\n        <div style={{ background: '#fff' }}>\n          <Helmet title={siteTitle} />\n          <div className=\"wrapper\">\n            <h2 className=\"section-headline\">Lookup by date</h2>\n            <ul className=\"year-list\">\n              {years.map((year) => {\n                return (\n                  <li key={year}>\n                    <YearPreview date={ year }/>\n                  </li>\n                )\n              })}\n            </ul>\n            {/*}\n            <ul className=\"article-list\">\n              {posts.map(({ node }) => {\n                  return (\n                    <li key={node.slug}>\n                      <ArticlePreview article={node} />\n                    </li>\n                  )\n                })}\n              </ul> */}\n          </div>\n        </div>\n        <div>Icons made by <a href=\"https://www.flaticon.com/authors/smartline\" title=\"Smartline\">Smartline</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n      </Layout>\n    )\n  }\n}\n\nexport default Archives\n\nexport const pageQuery = graphql`\n  query ArchiveQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      distinct(field: year)\n      edges {\n        node {\n          title\n          slug\n          year\n          month\n          day\n          publishDate(formatString: \"YYYY\")\n          tags\n          heroImage {\n            fluid(maxWidth: 350, maxHeight: 196, resizingBehavior: SCALE) {\n              ...GatsbyContentfulFluid\n            }\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport styles from './styles/article-preview.module.css'\n\n\nconst ArticlePreview= ({ article, year, month, category }) => {\n  console.log(article)\n  let imagePath = require(`../images/${article.category}.svg`)\n\n  return (\n    <Link to={`/archives/${year}/${month}/${article.slug}`}>\n        <div class=\"card\">\n            <img\n                src= {imagePath}\n                class=\"card-img-top\"\n                alt=\"...\"\n            />\n            <div class=\"card-body\">\n                <h4 class=\"card-title\" style={{\n                    alignContent: \"center\",\n                }}>{article.title}</h4>\n                <p class=\"card-text\">\n                {article.description.description}\n                </p>\n                <a href=\"#!\" class=\"btn btn-primary\">Button</a>\n            </div>\n        </div>\n    </Link>\n    )\n  }\n\nexport default ArticlePreview;\n    {/*}  \n    return (\n      <div className={styles.preview}>\n        <img\n          src={imagePath}\n          class=\"card-img-top\"\n          alt=\"...\"\n        />  \n        <h3 className={styles.previewTitle}>\n          <Link to={`/archives/${year}/${month}/${article.slug}`}>{article.title}</Link>\n        </h3>\n        <small>{`${month}/${article.day}/${year}`}</small>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: article.description.childMarkdownRemark.html,\n          }}\n        />\n      </div> \n        ) */}\n  \n\n\n\n/*\nexport default ({ article, year, month, category }) => (\n  imagePath = require(`../images/${category}.svg`\n\n    return (\n    <div className={styles.preview}>\n      <img\n        src={require(`../images/${category}.svg`)}\n        class=\"card-img-top\"\n        alt=\"...\"\n      />  \n      <h3 className={styles.previewTitle}>\n        <Link to={`/archives/${year}/${month}/${article.slug}`}>{article.title}</Link>\n      </h3>\n      <small>{`${month}/${article.day}/${year}`}</small>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: article.description.childMarkdownRemark.html,\n        }}\n      />\n    </div> \n  )\n)\n*/\n\n\n\n//       <Img alt=\"\" fluid={article.heroImage.fluid} />\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport Card from '../card'\nimport styles from '../styles/article-preview.module.css'\n\nexport default ({ date, name, month, category }) => (\n  <div className={styles.preview}>\n    <h3 className={styles.previewTitle}>\n      <Card title={date} name={name} month={ month } category={category}></Card>\n      {/*<Link to=\"#\">{ year }</Link>*/}\n    </h3>\n  </div>\n)"],"sourceRoot":""}